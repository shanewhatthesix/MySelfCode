#include<bits/stdc++.h>
using namespace std;
int main(){

	/*
	algorithm
	
	STL(standard template library - 标准模板库):
	
	是C++标准库的重要组成部分，不仅是一个可复用的组件库，而且是一个包括逻辑数据结构与算法的软件框架
	
	algorithm是STL中的算法库
	
	algorithm里的算法很多，下面几个是最常用的：
	*---------------------------------------*
	|函数名		 |	 作用                   |
	|-------------------------------------- |
	|max()       |   返回两个数中的最大值   |
	|---------------------------------------|
	|min()       |   返回两个数中的最小值   |
	|---------------------------------------|
	|abs()       |   返回一个数的绝对值     |
	|---------------------------------------|
	|swap()      |   交换两个变量的值       |
	|---------------------------------------|
	|reverse()   |   转置一个数组           |
	|---------------------------------------|
	|fil()       |   填充数组               |
	|---------------------------------------|
	|sort()      |   数组排序               |
	*---------------------------------------*
	*/
	
	//max & min		注意：定义变量的时候，名字就不能叫max和min了，会导致重名
	int a=9,b=20;
	cout<<max(a,b)<<endl;//输出两个中的最大值
	cout<<min(a,b)<<endl;//输出两个中的最小值
	//备注 ： 如果有三个变量，可以这么写：max(max(a,b),c)
	
	
	//abs           作用是获取绝对值
	cout<<abs(a-b)<<endl<<abs(b-a)<<endl;
	
	//swap          作用是交换两个变量的值
	swap(a,b);
	cout<<a<<endl<<b<<endl;
	swap(a,b);
	
	//reverse       作用是对数组进行转置
	int c[5]={2,8,13,27,39};
	reverse(c,c+3);
	for(int i=0;i<5;++i){
		cout<<c[i]<<" ";
	}
	cout<<endl;
	//Reverse 的参数：
	// 第一个参数a表示数组名 严格来说，是内存的起点
	// 第二个参数a+5： 表示结束位置，但是不含
	// 我们可以简单理解为 ： 起点 ，终点之前    也可以理解为 两个参数之差是正数时 从前面开始颠倒这两个参数的差个数的数组内容
	
	
	//fill          作用是对数组进行填充
	int d[5]={2,8,13,27,39};
	fill(d,d+5,3);//第二个参数所加上的值 就是要处理的多少个数  3的意思是填充的数字为3
	for(int i=0;i<5;++i){
		cout<<d[i]<<" ";
	}
	cout<<endl;
	return 0;
}
