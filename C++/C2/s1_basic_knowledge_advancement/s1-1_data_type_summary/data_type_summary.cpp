/*
1、计算机是怎么表示数的
    计算机的世界里其实只有0和1，那么0和1是如何表示数的呢
    计算机的01其实是2进制数，其表示数的原理和十进制一样
    
    以 10 进制数一一 2386 为例：
    ///////////////////////////////////////////////////////
    //位数   /     3     /      2    /     1    /     0  //
    //位值   / 10^3=1000 /  10^2=100 /  10^1=10 /  10^0=1//
    //例     /     2     /      3    /     8    /     6  //
    //大小   /   2000    /     300   /     80   /     6  //
    ///////////////////////////////////////////////////////
	
	对于2进制的数 1010（=10）：
	///////////////////////////////////////////////////////
    //位数    /     3     /      2    /     1    /   0   //
    //位值    /   2^3=8   /    2^2=4  /   2^1=2  / 2^0=1 //
    //例      /     1     /      0    /     1    /   0   //
    //每位大小/     8     /      0    /     2    /   0   //
    ///////////////////////////////////////////////////////
	
	10101 = 16+0+4+0+1 = 21
	1100 = 8+4+0+0 = 12
	100001 = 32+0+0+0+0+1 = 33
	111 = 4+2+1 = 7
	1000 = 8+0+0+0 = 8
	
	我们可以看到，计算机里的数都是用0和1表示的，所以它能写几位0和1，就代表了它能有多大
	计算机表示一个数的大小，以8位作为一个划分，一个8位我们称为一个字节
	
	一个字节最大可以表示：
	1   1   1   1   1   1   1   1
	128 64  32  16  8   4   2   1
	=128*2-1=253
	
	
2、数据占用空间
	///////////////////////////////////////////////////////
	// 数据类型    /         说明          /   占多少位  //
	// short       /        短整型         / 四个字节32位//
    // int         /         整型          / 四个字节32位//
    // long long   /        长整型         / 八个字节64位//
    // float       /   单精度浮点数（小数）/ 四个字节32位//
    // double      /     双精度浮点数      / 八个字节64位//
	///////////////////////////////////////////////////////
	
3、数据类型转换总结
	因为顺序不同导致类型不同从而结果不同的例子：
	#include<bits/stdc++.h>
	using namespace std;
	int main(){
		cout<<6/4*2.0<<endl;
		cout<<2.0*6/4<<endl;
	}

    类型转换的顺序是这样的：
    char -> int -> long long -> float -> double
    低精度 -> 高精度

*/

//输入一个小数，保留这个数的整数部分（向下取整）
#include<bits/stdc++.h>
using namespace std;
int main(){
	long long n;
	cin>>n;
	cout<<n-n%1;
}

